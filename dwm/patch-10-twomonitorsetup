--- dwm.c.orig	2025-01-23 20:05:06.561854000 +0300
+++ dwm.c	2025-01-23 20:06:09.088896000 +0300
@@ -185,7 +185,7 @@
 static void destroynotify(XEvent *e);
 static void detach(Client *c);
 static void detachstack(Client *c);
-static Monitor *dirtomon(int dir);
+// static Monitor *dirtomon(int dir);
 static void drawbar(Monitor *m);
 static void drawbars(void);
 static void enternotify(XEvent *e);
@@ -223,6 +223,7 @@
 static void resizerequest(XEvent *e);
 static void restack(Monitor *m);
 static void run(void);
+static void runAutostart(void);
 static void scan(void);
 static int sendevent(Window w, Atom proto, int m, long d0, long d1, long d2, long d3, long d4);
 static void sendmon(Client *c, Monitor *m);
@@ -792,6 +793,7 @@
 	}
 }
 
+/*
 Monitor *
 dirtomon(int dir)
 {
@@ -806,7 +808,7 @@
 		for (m = mons; m->next != selmon; m = m->next);
 	return m;
 }
-
+*/
 void
 drawbar(Monitor *m)
 {
@@ -872,6 +874,7 @@
 	if ((w = m->ww - tw - stw - x) > bh) {
 		drw_setscheme(drw, scheme[m == selmon ? SchemeInfoSel : SchemeInfoNorm]);
 		if (m->sel) {
+			/* drw_setscheme(drw, scheme[SchemeNorm]); */
 			drw_text(drw, x, 0, w, bh, lrpad / 2, m->sel->name, 0);
 			if (m->sel->isfloating)
 				drw_rect(drw, x + boxs, boxs, boxw, boxw, m->sel->isfixed, 0);
@@ -959,17 +962,22 @@
 }
 
 void
-focusmon(const Arg *arg)
-{
-	Monitor *m;
+focusmon(const Arg *arg) {
+    Monitor *m = NULL;
 
-	if (!mons->next)
-		return;
-	if ((m = dirtomon(arg->i)) == selmon)
-		return;
-	unfocus(selmon->sel, 0);
-	selmon = m;
-	focus(NULL);
+    if (!mons->next)
+        return;
+
+    if (arg->i > 0) {
+        m = mons->next;
+    } else if (arg->i < 0 && mons->next) {
+        m = mons;
+    }
+
+    if (m) {
+        selmon = m;
+        focus(NULL);
+    }
 }
 
 void
@@ -1601,6 +1609,12 @@
 }
 
 void
+runAutostart(void) {
+	system("cd ~/.dwm; ./autostart_blocking.sh");
+	system("cd ~/.dwm; ./autostart.sh &");
+}
+
+void
 scan(void)
 {
 	unsigned int i, num;
@@ -1931,14 +1945,26 @@
 	}
 }
 
-void
-tagmon(const Arg *arg)
-{
-	if (!selmon->sel || !mons->next)
-		return;
-	sendmon(selmon->sel, dirtomon(arg->i));
+void tagmon(const Arg *arg) {
+    if (!selmon->sel || !mons->next)
+        return;
+
+    Monitor *m;
+
+    if (arg->i > 0) {
+        m = mons->next;  // Move to mon1
+    } else if (arg->i < 0 && mons->next) {
+        m = mons;  // Move to mon2
+    } else {
+        return; // Do nothing for arg->i == 0
+    }
+
+    sendmon(selmon->sel, m);
+    focus(NULL);
+    arrange(selmon);
 }
 
+
 void
 tile(Monitor *m)
 {
@@ -2585,6 +2611,7 @@
 		die("pledge");
 #endif /* __OpenBSD__ */
 	scan();
+	runAutostart();
 	run();
 	cleanup();
 	XCloseDisplay(dpy);
